{"ast":null,"code":"var _jsxFileName = \"/Users/daniel.giordano/Desktop/roi_calc/src/Number.js\";\nimport React from 'react';\nimport NumberFormat from 'react-number-format';\n\nvar Number = function Number(props) {\n  var isNumericString = true;\n  var displayType = 'text';\n  var prefixValue = \"\";\n  var suffixValue = \"\";\n\n  if (props.type === 'input') {\n    isNumericString = false;\n    displayType = 'input';\n  }\n\n  if (props.symbol) {\n    if (props.symbol === \"$\") {\n      prefixValue = props.symbol;\n    } else {\n      suffixValue = props.symbol;\n    }\n  }\n\n  return React.createElement(NumberFormat, {\n    name: props.lookupName,\n    displayType: displayType,\n    thousandSeparator: true,\n    isNumericString: isNumericString,\n    prefix: prefixValue,\n    suffix: suffixValue,\n    onChange: props.onChange,\n    defaultValue: props.defaultValue,\n    value: props.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  });\n};\n\nexport default Number;","map":{"version":3,"sources":["/Users/daniel.giordano/Desktop/roi_calc/src/Number.js"],"names":["React","NumberFormat","Number","props","isNumericString","displayType","prefixValue","suffixValue","type","symbol","lookupName","onChange","defaultValue","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACpB,MAAIC,eAAe,GAAG,IAAtB;AACA,MAAIC,WAAW,GAAG,MAAlB;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,WAAW,GAAG,EAAlB;;AAEA,MAAIJ,KAAK,CAACK,IAAN,KAAe,OAAnB,EAA4B;AACxBJ,IAAAA,eAAe,GAAG,KAAlB;AACAC,IAAAA,WAAW,GAAG,OAAd;AACH;;AAED,MAAIF,KAAK,CAACM,MAAV,EAAkB;AACd,QAAIN,KAAK,CAACM,MAAN,KAAiB,GAArB,EAA0B;AACtBH,MAAAA,WAAW,GAAGH,KAAK,CAACM,MAApB;AACH,KAFD,MAEO;AACHF,MAAAA,WAAW,GAAGJ,KAAK,CAACM,MAApB;AACH;AACJ;;AAED,SACI,oBAAC,YAAD;AACI,IAAA,IAAI,EAAEN,KAAK,CAACO,UADhB;AAEI,IAAA,WAAW,EAAEL,WAFjB;AAGI,IAAA,iBAAiB,EAAE,IAHvB;AAII,IAAA,eAAe,EAAED,eAJrB;AAKI,IAAA,MAAM,EAAEE,WALZ;AAMI,IAAA,MAAM,EAAEC,WANZ;AAOI,IAAA,QAAQ,EAAEJ,KAAK,CAACQ,QAPpB;AAQI,IAAA,YAAY,EAAER,KAAK,CAACS,YARxB;AASI,IAAA,KAAK,EAAET,KAAK,CAACU,KATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAaH,CAhCD;;AAkCA,eAAeX,MAAf","sourcesContent":["import React from 'react';\nimport NumberFormat from 'react-number-format';\n\nconst Number = props => {\n    let isNumericString = true\n    let displayType = 'text'\n    let prefixValue = \"\"\n    let suffixValue = \"\"\n\n    if (props.type === 'input') {\n        isNumericString = false\n        displayType = 'input'\n    }\n\n    if (props.symbol) {\n        if (props.symbol === \"$\") {\n            prefixValue = props.symbol\n        } else {\n            suffixValue = props.symbol\n        }\n    }\n\n    return(\n        <NumberFormat \n            name={props.lookupName}\n            displayType={displayType}\n            thousandSeparator={true}\n            isNumericString={isNumericString}\n            prefix={prefixValue}\n            suffix={suffixValue}\n            onChange={props.onChange}\n            defaultValue={props.defaultValue}\n            value={props.value}\n        />\n    )\n}\n\nexport default Number;"]},"metadata":{},"sourceType":"module"}